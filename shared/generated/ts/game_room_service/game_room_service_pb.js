// source: game_room_service/game_room_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.game_room_service.ChessGame', null, global);
goog.exportSymbol('proto.game_room_service.ConnectRequest', null, global);
goog.exportSymbol('proto.game_room_service.GameStateResponse', null, global);
goog.exportSymbol('proto.game_room_service.GameStateResponse.GAME_STATE', null, global);
goog.exportSymbol('proto.game_room_service.GameStateResponse.TURN', null, global);
goog.exportSymbol('proto.game_room_service.Move', null, global);
goog.exportSymbol('proto.game_room_service.MoveRequest', null, global);
goog.exportSymbol('proto.game_room_service.MoveResponse', null, global);
goog.exportSymbol('proto.game_room_service.PIECE', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game_room_service.ConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game_room_service.ConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game_room_service.ConnectRequest.displayName = 'proto.game_room_service.ConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game_room_service.GameStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game_room_service.GameStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game_room_service.GameStateResponse.displayName = 'proto.game_room_service.GameStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game_room_service.ChessGame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.game_room_service.ChessGame.repeatedFields_, null);
};
goog.inherits(proto.game_room_service.ChessGame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game_room_service.ChessGame.displayName = 'proto.game_room_service.ChessGame';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game_room_service.Move = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game_room_service.Move, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game_room_service.Move.displayName = 'proto.game_room_service.Move';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game_room_service.MoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game_room_service.MoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game_room_service.MoveRequest.displayName = 'proto.game_room_service.MoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.game_room_service.MoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.game_room_service.MoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.game_room_service.MoveResponse.displayName = 'proto.game_room_service.MoveResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game_room_service.ConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.game_room_service.ConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game_room_service.ConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.ConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game_room_service.ConnectRequest}
 */
proto.game_room_service.ConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game_room_service.ConnectRequest;
  return proto.game_room_service.ConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game_room_service.ConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game_room_service.ConnectRequest}
 */
proto.game_room_service.ConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game_room_service.ConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game_room_service.ConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game_room_service.ConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.ConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string userName = 1;
 * @return {string}
 */
proto.game_room_service.ConnectRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.ConnectRequest} returns this
 */
proto.game_room_service.ConnectRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game_room_service.GameStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.game_room_service.GameStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game_room_service.GameStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.GameStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gamestate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentturn: jspb.Message.getFieldWithDefault(msg, 3, 0),
    chessgame: (f = msg.getChessgame()) && proto.game_room_service.ChessGame.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game_room_service.GameStateResponse}
 */
proto.game_room_service.GameStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game_room_service.GameStateResponse;
  return proto.game_room_service.GameStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game_room_service.GameStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game_room_service.GameStateResponse}
 */
proto.game_room_service.GameStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.game_room_service.GameStateResponse.GAME_STATE} */ (reader.readEnum());
      msg.setGamestate(value);
      break;
    case 3:
      var value = /** @type {!proto.game_room_service.GameStateResponse.TURN} */ (reader.readEnum());
      msg.setCurrentturn(value);
      break;
    case 4:
      var value = new proto.game_room_service.ChessGame;
      reader.readMessage(value,proto.game_room_service.ChessGame.deserializeBinaryFromReader);
      msg.setChessgame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game_room_service.GameStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game_room_service.GameStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game_room_service.GameStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.GameStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGamestate();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCurrentturn();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getChessgame();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.game_room_service.ChessGame.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.game_room_service.GameStateResponse.GAME_STATE = {
  NOT_STARTED: 0,
  ONGOING: 1,
  FINISHED: 2
};

/**
 * @enum {number}
 */
proto.game_room_service.GameStateResponse.TURN = {
  WHITE: 0,
  BLACK: 1
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.game_room_service.GameStateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.GameStateResponse} returns this
 */
proto.game_room_service.GameStateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GAME_STATE gameState = 2;
 * @return {!proto.game_room_service.GameStateResponse.GAME_STATE}
 */
proto.game_room_service.GameStateResponse.prototype.getGamestate = function() {
  return /** @type {!proto.game_room_service.GameStateResponse.GAME_STATE} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.game_room_service.GameStateResponse.GAME_STATE} value
 * @return {!proto.game_room_service.GameStateResponse} returns this
 */
proto.game_room_service.GameStateResponse.prototype.setGamestate = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional TURN currentTurn = 3;
 * @return {!proto.game_room_service.GameStateResponse.TURN}
 */
proto.game_room_service.GameStateResponse.prototype.getCurrentturn = function() {
  return /** @type {!proto.game_room_service.GameStateResponse.TURN} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.game_room_service.GameStateResponse.TURN} value
 * @return {!proto.game_room_service.GameStateResponse} returns this
 */
proto.game_room_service.GameStateResponse.prototype.setCurrentturn = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ChessGame chessGame = 4;
 * @return {?proto.game_room_service.ChessGame}
 */
proto.game_room_service.GameStateResponse.prototype.getChessgame = function() {
  return /** @type{?proto.game_room_service.ChessGame} */ (
    jspb.Message.getWrapperField(this, proto.game_room_service.ChessGame, 4));
};


/**
 * @param {?proto.game_room_service.ChessGame|undefined} value
 * @return {!proto.game_room_service.GameStateResponse} returns this
*/
proto.game_room_service.GameStateResponse.prototype.setChessgame = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game_room_service.GameStateResponse} returns this
 */
proto.game_room_service.GameStateResponse.prototype.clearChessgame = function() {
  return this.setChessgame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game_room_service.GameStateResponse.prototype.hasChessgame = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.game_room_service.ChessGame.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game_room_service.ChessGame.prototype.toObject = function(opt_includeInstance) {
  return proto.game_room_service.ChessGame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game_room_service.ChessGame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.ChessGame.toObject = function(includeInstance, msg) {
  var f, obj = {
    white: jspb.Message.getFieldWithDefault(msg, 1, ""),
    black: jspb.Message.getFieldWithDefault(msg, 2, ""),
    movesList: jspb.Message.toObjectList(msg.getMovesList(),
    proto.game_room_service.Move.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game_room_service.ChessGame}
 */
proto.game_room_service.ChessGame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game_room_service.ChessGame;
  return proto.game_room_service.ChessGame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game_room_service.ChessGame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game_room_service.ChessGame}
 */
proto.game_room_service.ChessGame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhite(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlack(value);
      break;
    case 3:
      var value = new proto.game_room_service.Move;
      reader.readMessage(value,proto.game_room_service.Move.deserializeBinaryFromReader);
      msg.addMoves(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game_room_service.ChessGame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game_room_service.ChessGame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game_room_service.ChessGame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.ChessGame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWhite();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlack();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMovesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.game_room_service.Move.serializeBinaryToWriter
    );
  }
};


/**
 * optional string white = 1;
 * @return {string}
 */
proto.game_room_service.ChessGame.prototype.getWhite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.ChessGame} returns this
 */
proto.game_room_service.ChessGame.prototype.setWhite = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string black = 2;
 * @return {string}
 */
proto.game_room_service.ChessGame.prototype.getBlack = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.ChessGame} returns this
 */
proto.game_room_service.ChessGame.prototype.setBlack = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Move moves = 3;
 * @return {!Array<!proto.game_room_service.Move>}
 */
proto.game_room_service.ChessGame.prototype.getMovesList = function() {
  return /** @type{!Array<!proto.game_room_service.Move>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.game_room_service.Move, 3));
};


/**
 * @param {!Array<!proto.game_room_service.Move>} value
 * @return {!proto.game_room_service.ChessGame} returns this
*/
proto.game_room_service.ChessGame.prototype.setMovesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.game_room_service.Move=} opt_value
 * @param {number=} opt_index
 * @return {!proto.game_room_service.Move}
 */
proto.game_room_service.ChessGame.prototype.addMoves = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.game_room_service.Move, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.game_room_service.ChessGame} returns this
 */
proto.game_room_service.ChessGame.prototype.clearMovesList = function() {
  return this.setMovesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game_room_service.Move.prototype.toObject = function(opt_includeInstance) {
  return proto.game_room_service.Move.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game_room_service.Move} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.Move.toObject = function(includeInstance, msg) {
  var f, obj = {
    piece: jspb.Message.getFieldWithDefault(msg, 1, 0),
    from: jspb.Message.getFieldWithDefault(msg, 2, ""),
    to: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game_room_service.Move}
 */
proto.game_room_service.Move.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game_room_service.Move;
  return proto.game_room_service.Move.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game_room_service.Move} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game_room_service.Move}
 */
proto.game_room_service.Move.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.game_room_service.PIECE} */ (reader.readEnum());
      msg.setPiece(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game_room_service.Move.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game_room_service.Move.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game_room_service.Move} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.Move.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPiece();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional PIECE piece = 1;
 * @return {!proto.game_room_service.PIECE}
 */
proto.game_room_service.Move.prototype.getPiece = function() {
  return /** @type {!proto.game_room_service.PIECE} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.game_room_service.PIECE} value
 * @return {!proto.game_room_service.Move} returns this
 */
proto.game_room_service.Move.prototype.setPiece = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string from = 2;
 * @return {string}
 */
proto.game_room_service.Move.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.Move} returns this
 */
proto.game_room_service.Move.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string to = 3;
 * @return {string}
 */
proto.game_room_service.Move.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.Move} returns this
 */
proto.game_room_service.Move.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game_room_service.MoveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.game_room_service.MoveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game_room_service.MoveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.MoveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    move: (f = msg.getMove()) && proto.game_room_service.Move.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game_room_service.MoveRequest}
 */
proto.game_room_service.MoveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game_room_service.MoveRequest;
  return proto.game_room_service.MoveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game_room_service.MoveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game_room_service.MoveRequest}
 */
proto.game_room_service.MoveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = new proto.game_room_service.Move;
      reader.readMessage(value,proto.game_room_service.Move.deserializeBinaryFromReader);
      msg.setMove(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game_room_service.MoveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game_room_service.MoveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game_room_service.MoveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.MoveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMove();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.game_room_service.Move.serializeBinaryToWriter
    );
  }
};


/**
 * optional string roomId = 1;
 * @return {string}
 */
proto.game_room_service.MoveRequest.prototype.getRoomid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.MoveRequest} returns this
 */
proto.game_room_service.MoveRequest.prototype.setRoomid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userName = 2;
 * @return {string}
 */
proto.game_room_service.MoveRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.MoveRequest} returns this
 */
proto.game_room_service.MoveRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Move move = 3;
 * @return {?proto.game_room_service.Move}
 */
proto.game_room_service.MoveRequest.prototype.getMove = function() {
  return /** @type{?proto.game_room_service.Move} */ (
    jspb.Message.getWrapperField(this, proto.game_room_service.Move, 3));
};


/**
 * @param {?proto.game_room_service.Move|undefined} value
 * @return {!proto.game_room_service.MoveRequest} returns this
*/
proto.game_room_service.MoveRequest.prototype.setMove = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.game_room_service.MoveRequest} returns this
 */
proto.game_room_service.MoveRequest.prototype.clearMove = function() {
  return this.setMove(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.game_room_service.MoveRequest.prototype.hasMove = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.game_room_service.MoveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.game_room_service.MoveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.game_room_service.MoveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.MoveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.game_room_service.MoveResponse}
 */
proto.game_room_service.MoveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.game_room_service.MoveResponse;
  return proto.game_room_service.MoveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.game_room_service.MoveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.game_room_service.MoveResponse}
 */
proto.game_room_service.MoveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.game_room_service.MoveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.game_room_service.MoveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.game_room_service.MoveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.game_room_service.MoveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.game_room_service.MoveResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.game_room_service.MoveResponse} returns this
 */
proto.game_room_service.MoveResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.game_room_service.PIECE = {
  PAWN: 0,
  ROOK: 1,
  KNIGHT: 2,
  BISHOP: 3,
  QUEEN: 4,
  KING: 5
};

goog.object.extend(exports, proto.game_room_service);
